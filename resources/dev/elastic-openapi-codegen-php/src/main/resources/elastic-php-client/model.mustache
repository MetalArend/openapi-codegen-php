<?php
{{#models}}

declare(strict_types=1);

namespace {{modelPackage}};

use ADS\JsonImmutableObjects\JsonSchemaAwareRecordLogic;
use EventEngine\JsonSchema\JsonSchemaAwareRecord;

{{#model}}
final class {{classname}} implements JsonSchemaAwareRecord
{
    use JsonSchemaAwareRecordLogic;

// phpcs:disable SlevomatCodingStandard.Classes.UnusedPrivateElements.UnusedProperty
// phpcs:disable Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps
{{#vars}}{{#isListContainer}}
    /** @var {{dataType}}<{{^complexType}}{{items.dataType}}{{/complexType}}{{#complexType}}{{{.}}}{{/complexType}}>{{^required}}|null{{/required}} */{{/isListContainer}}{{#isContainer}}{{^isListContainer}}
    /** @var {{dataType}}<{{^complexType}}{{items.dataType}}{{/complexType}}{{#complexType}}{{{.}}}{{/complexType}}>{{^required}}|null{{/required}} */{{/isListContainer}}{{/isContainer}}{{#isFreeFormObject}}
    /** @var {{dataType}}<mixed>{{^required}}|null{{/required}} */{{/isFreeFormObject}}
    private {{^required}}?{{/required}}{{#complexType}}{{#isListContainer}}{{dataType}}{{/isListContainer}}{{^isListContainer}}{{complexType}}{{/isListContainer}}{{/complexType}}{{^complexType}}{{dataType}}{{/complexType}} ${{name}}{{^required}} = null{{/required}};
{{/vars}}
{{#vars}}
    /**
    * @return {{#complexType}}{{#isListContainer}}{{dataType}}{{/isListContainer}}{{^isListContainer}}{{complexType}}{{/isListContainer}}{{/complexType}}{{^complexType}}{{dataType}}{{/complexType}}{{#isListContainer}}<{{^complexType}}{{items.dataType}}{{/complexType}}{{#complexType}}{{{.}}}{{/complexType}}>{{/isListContainer}}{{#isContainer}}{{^isListContainer}}<{{^complexType}}{{items.dataType}}{{/complexType}}{{#complexType}}{{{.}}}{{/complexType}}>{{/isListContainer}}{{/isContainer}}{{#isFreeFormObject}}{{^isContainer}}{{^isListContainer}}<mixed>{{/isListContainer}}{{/isContainer}}{{/isFreeFormObject}}{{^required}}|null{{/required}}
    */
    public function {{name}}(): {{^required}}?{{/required}}{{#complexType}}{{#isListContainer}}{{dataType}}{{/isListContainer}}{{^isListContainer}}{{complexType}}{{/isListContainer}}{{/complexType}}{{^complexType}}{{dataType}}{{/complexType}}
    {
        return $this->{{name}};
    }
{{/vars}}

    /**
    * @return array<string, string>
    *
    * @phpcsSuppress SlevomatCodingStandard.Classes.UnusedPrivateElements.UnusedMethod
    */
    private static function arrayPropItemTypeMap(): array
    {
        return [{{#vars}}{{#isListContainer}}
            '{{baseName}}' => {{^complexType}}'{{items.dataType}}'{{/complexType}}{{#complexType}}{{{.}}}::class{{/complexType}},{{/isListContainer}}{{#isContainer}}{{^isListContainer}}
            '{{baseName}}' => {{^complexType}}'{{items.dataType}}'{{/complexType}}{{#complexType}}{{{.}}}::class{{/complexType}},{{/isListContainer}}{{/isContainer}}{{/vars}}
        ];
    }
// phpcs:enable
}{{/model}}{{/models}}
